R: Core Skills for Reproducible Research
========================================================
width:1200

Maja Zalo&#x17e;nik

22.3.2016

```{r setup, echo=FALSE, message=FALSE, warning = FALSE}
require(knitr)
opts_knit$set(root.dir = "~/Dropbox/XtraWork/R stuff/RepResCoreSkillsR")
opts_chunk$set(warning=FALSE, message=FALSE)
options(scipen=999, digits=4)


```

Outline
========================================================
incremental: true
- Reproducible Research
- RStudio and project management
- Good coding practices in R
- Importing and cleaning data
- Standard control structures
- Vectorisation and `apply` functions
- Writing your own funcitons
- Data manipulation with `dplyr`
- Piping/chaining commands

Rules
========================================================
- Don't forget to mention the rules! 

RStudio
========================================================
incremental: true
- *Best* IDE for R
- Project management
- Version control
- knitting and direct publishing
- Interactive graphics
- ... 

Project management
========================================================
incremental: true

R project-level files:
- *project* -- .Rproj
- *workspace* -- .RData  
- *history* -- .Rhistory
- *settings* -- .Rprofile

Scripts -- .R

Data -- .csv, .xls, .dat ... 

Figures

Presentation -- .pdf, .doc, .html, (.tex)

Good Coding Practice
========================================================
incremental: true
![title](../../figures/code_quality.png)

- [Google's R Style Guide](https://google.github.io/styleguide/Rguide.xml)
- [Hadley Wickham's Style Guide](http://adv-r.had.co.nz/Style.html)
- COMMENT EVERYTHING

Literate Programming
========================================================

> "Instead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do."

> <p style="text-align: right;">Donald Knuth (1984) </p>



Practical I. - project setup
========================================================
The complete documentation for this course is available as an RStudio project in a public github repository:
[https://github.com/majazaloznik/RepResCoreSkillsR](https://github.com/majazaloznik/RepResCoreSkillsR) 
or for extra convenience: [http://tinyurl.com/RCSRepRes](http://tinyurl.com/RCSRepRes)

* navigate to the repo and open the RepResCoreSkillsManual.pdf in the /presentations/manual folder. 

* find the instructions for Practical I in the manual

Janitor work
========================================================
incremental: true
> Data scientists, according to interviews and expert estimates, spend from 50 percent to 80 percent of their time mired in this more mundane labor of collecting and preparing unruly digital data, before it can be explored for useful nuggets. <p style="text-align: right;"><a href="http://www.nytimes.com/2014/08/18/technology/for-big-data-scientists-hurdle-to-insights-is-janitor-work.html?_r=0">source: NY Times</a></p>

* Data formats, sources, and 
* `tidyr` package
  + `spread()` and  `gather()`
  + `separate()` and  `unite()`
  
Tidy Data
========================================================
incremental:true
> *Tidy datasets are all alike but every messy dataset is messy in its own way.* - Hadley Wickham

1. Each variable forms a column.
2. Each observation forms a row.
3. Each type of observational unit forms a table.


Tidy Data - spread()
========================================================
```{r, echo=FALSE}
messy.02 <- read.table("data/demo/messy.02.txt")
messy.02
```

Tidy Data - spread()
========================================================
```{r, echo=c(3:4)}
require(tidyr)
require(dplyr)
tidy.02 <- spread(messy.02, key, value)
tidy.02
```


Tidy Data -- key : value pairs
========================================================

```{r, eval=FALSE}
Country: Norway
Country: Slovenia 
...
Year: 2010
Year: 2050

Population: 4891300
Population: 2003136
...
Density: 16.07489
Density: 20.91484
...

```

Tidy data: 
* each column name is a *key*
* each cell is a *value*

Tidy Data - gather()
========================================================
incremental:true
```{r, echo=FALSE}
messy.01 <- read.table("data/demo/messy.01.txt")
messy.01
```

```{r, echo=c(3,5)}
require(tidyr)
require(dplyr)
tidy.01 <- gather(messy.01, year, population, 2:3)
tidy.01 <-  mutate(tidy.01, year=ifelse(year=="X2010", 2010, 2050))
tidy.01
```

Tidy Data - separate() 
========================================================
```{r, echo=FALSE}
messy.03 <- read.table("data/demo/messy.03.txt")
messy.03
```
Tidy Data - separate() 
========================================================
```{r}
tidy.03 <- separate(messy.03, double.key, c("year", "key"))
tidy.03
```

Tidy Data - unite() 
========================================================
```{r}
messy.again <- unite(tidy.03, new.double.key, key, year,  
                     sep = " in the year ")
messy.again
```



Practical II. - import and clean data
========================================================
```{r}
##########################################################
## DATA IMPORT AND CLEANUP
##########################################################
## 1.1  Import a .csv file
## 1.2  Download and import an Excel file
## 1.3  Download, unzip and import an SPSS file 
##########################################################
## 2.1  Data tidying
##########################################################
```
